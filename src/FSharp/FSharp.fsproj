<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net45;netstandard1.6;netstandard2.0</TargetFrameworks>
    <OutputType>Library</OutputType>
    <AssemblyName>MathNet.Numerics.FSharp</AssemblyName>
    <RootNamespace>MathNet.Numerics</RootNamespace>
    <IsPackable>true</IsPackable>
    <PackageId>MathNet.Numerics.FSharp</PackageId>
    <VersionPrefix>4.0.0</VersionPrefix>
    <VersionSuffix>beta01</VersionSuffix>
    <PackageVersion>4.0.0-beta01</PackageVersion>
    <Version>4.0.0-beta01</Version>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <FileVersion>4.0.0.0</FileVersion>
    <Title>Math.NET Numerics for F#</Title>
    <Authors>Christoph Ruegg, Marcus Cuda, Jurgen Van Gael</Authors>
    <Company>Math.NET Project</Company>
    <Product>Math.NET Numerics</Product>
    <Description>F# Modules for Math.NET Numerics, the numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net Framework 4.5 or higher and .Net Standard 1.6 or higher, on Windows, Linux and Mac.</Description>
    <Copyright>Copyright Math.NET Project</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://numerics.mathdotnet.com/License.html</PackageLicenseUrl>
    <PackageProjectUrl>https://numerics.mathdotnet.com/</PackageProjectUrl>
    <PackageIconUrl>https://www.mathdotnet.com/images/MathNet128.png</PackageIconUrl>
    <PackageReleaseNotes>BREAKING: drop obsolete functionality (which has been marked as obsolete for a while)
BREAKING: drop support for .Net 3.5 and PCL profiles
BREAKING: F#: drop support for .Net 4.0 and PCL profiles
Explicit builds for .Net Framework 4.0 and higher and for .Net Standard 1.3 and 2.0
F#: explicit builds for .Net Framework 4.5 and higher and for .Net Standard 1.6 and 2.0
Assemblies are now code-signed with an X.509 certificate, using SHA2-256 hashes
BUG: Ode Solver: fix typo in the Runge-Kutta solvers on time-step handling ~Ksero
BUG: fix Matrix.GetHashCode for wide matrices ~mjmckp</PackageReleaseNotes>
    <PackageTags>fsharp F# math numeric statistics probability integration interpolation regression solve fit linear algebra matrix fft</PackageTags>
    <IsTool>false</IsTool>
    <RepositoryUrl>https://github.com/mathnet/mathnet-numerics</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <NeutralLanguage>en</NeutralLanguage>
    <NoPackageAnalysis>false</NoPackageAnalysis>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <IncludeContentInPack>false</IncludeContentInPack>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <NoWarn>FS2003</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='netstandard1.6'">
    <DefineConstants>NETSTANDARD</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <DefineConstants>NETSTANDARD</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\Numerics\Numerics.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="Compatibility.fs" />
    <Compile Include="Statistics.fs" />
    <Compile Include="Random.fs" />
    <Compile Include="Distributions.fs" />
    <Compile Include="Generate.fs" />
    <Compile Include="LinearAlgebra.Vector.fs" />
    <Compile Include="LinearAlgebra.Matrix.fs" />
    <Compile Include="Complex.fs" />
    <Compile Include="BigIntegerExtensions.fs" />
    <Compile Include="BigRational.fsi" />
    <Compile Include="BigRational.fs" />
    <Compile Include="Differentiate.fs" />
    <Compile Include="Fit.fs" />
    <Compile Include="FindRoots.fs" />
    <Compile Include="RandomVariable.fs" />
    <Compile Include="Quaternion.fs" />
    <None Include="MathNet.Numerics.fsx" />
    <None Include="MathNet.Numerics.IfSharp.fsx" />
  </ItemGroup>
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>
